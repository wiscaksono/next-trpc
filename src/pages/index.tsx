/* eslint-disable @next/next/no-img-element */
import type {
  GetServerSidePropsContext,
  InferGetServerSidePropsType,
  NextPage,
} from "next";

import { PlusIcon } from "@heroicons/react/20/solid";
import { getServerSession } from "next-auth";
import Head from "next/head";
import { useState } from "react";
import { authOptions } from "../server/auth";
import { api } from "../utils/api";

import Navbar from "../components/Navbar";

const Home: NextPage = ({
  user,
}: InferGetServerSidePropsType<typeof getServerSession>) => {
  const [notes, setNotes] = useState<string>("");

  const { data: AllNotes } = api.notes.getNotes.useQuery();
  const createNote = api.notes.createNotes.useMutation();
  const deleteNote = api.notes.deleteNotes.useMutation();

  const handleClick = () => {
    createNote.mutate({
      title: "TESTING",
      content: notes,
    });
  };

  const handleDelete = (id: string) => {
    const action = confirm("Yakin lu mo diapus?");
    if (action) deleteNote.mutate({ id: id });
  };

  return (
    <>
      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col">
        <Navbar user={user} />

        <section className="flex flex-1 items-center justify-center">
          <div className="text-center">
            <svg
              className="mx-auto h-12 w-12 text-gray-400"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              aria-hidden="true"
            >
              <path
                vectorEffect="non-scaling-stroke"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
              />
            </svg>
            <h3 className="mt-2 text-sm font-medium text-gray-900">
              No projects
            </h3>
            <p className="mt-1 text-sm text-gray-500">
              Get started by creating a new project.
            </p>
            <input type="text" onChange={(e) => setNotes(e.target.value)} />
            <div className="mt-6">
              <button
                onClick={() => handleClick()}
                type="button"
                className="inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
              >
                <PlusIcon className="-ml-1 mr-2 h-5 w-5" aria-hidden="true" />
                New Project
              </button>
            </div>
          </div>
          <div>
            {AllNotes?.map((note) => (
              <div
                key={note.id}
                onClick={() => {
                  handleDelete(note.id);
                }}
              >
                <p>{note.content}</p>
              </div>
            ))}
          </div>
        </section>
      </main>
    </>
  );
};

export default Home;

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const session = await getServerSession(context.req, context.res, authOptions);

  if (!session) {
    return {
      redirect: {
        destination: "/auth/signin",
        permanent: false,
      },
    };
  }

  return {
    props: {
      user: session.user,
    },
  };
}
